name: build

on:
  workflow_call:
    inputs:            
      buildtype:
        required: false
        default: docker
        type: string
      repository:
        required: true
        type: string
    secrets:
      DOCKERHUB_USERNAME:
        required: true
      DOCKERHUB_PASSWORD:
        required: true
      GITHUB_TOKEN:
        required: true
    outputs:
      imgname:
        value: ${{ jobs.build.output.output1 }}

jobs:
  build_nonprod:
    runs-on: ubuntu-latest
    outputs:
      output1: ${{ steps.step1.outputs.imgname }}      
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Set version
        if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'    
        uses: paulhatch/semantic-version@v4.0.2
        id: versioning
        with:
          tag_prefix: "v"
          major_pattern: "BREAKING CHANGE:"
          minor_pattern: "feat:"
          format: "${major}.${minor}.${patch}"
            
      - name: Create Release main
        if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.versioning.outputs.version }}
          release_name: v${{ steps.versioning.outputs.version }}
            
      - name: Output Step                             
        if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
        env:
          NEW_TAG: v${{ steps.versioning.outputs.version }}
        run: echo "new tag&Release $NEW_TAG"
        
      - name: Set Tag
        if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
        run: |
            echo v${{ steps.versioning.outputs.version }}
            echo "TAG=$(echo v${{ steps.versioning.outputs.version }} | cut -c 1-7)" >> $GITHUB_ENV;

      - if: github.ref != 'refs/heads/master' && github.ref != 'refs/heads/main'
        run: echo "TAG=$(echo $GITHUB_SHA | cut -c 1-7)" >> $GITHUB_ENV;
      - if: env.TAG == 'v'
        run: echo "=$(echo $GITHUB_SHA | cut -c 1-7)" >> $GITHUB_ENV;
      - id: step1
        run: echo "::set-output name=imgname::${{ inputs.repository }}:${{ env.TAG }}"
        
      - name: Kaniko build
        uses: aevea/action-kaniko@master
        with:
          image: ${{ secrets.repository }}
          tag: ${{ env.TAG }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          cache: true
          cache_registry: ${{ secrets.DOCKERHUB_USERNAME }}/cache

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{ inputs.repository }}:${{ env.TAG }}'
          format: 'table'
          exit-code: '0'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL'
        env:
          TRIVY_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          TRIVY_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}